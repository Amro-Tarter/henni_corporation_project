rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isMentor() {
      return isAuthenticated() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'mentor';
    }

    // â”€â”€ Users collection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /users/{userId} {
      allow read: if true; // Public read for user lookup (e.g., display names)
      allow create: if isAuthenticated();
      allow update: if isAdmin() || request.auth.uid == userId;
      allow delete: if isAdmin();
      allow write: if isAdmin();
    }
	
    // Publicly readable newsletters
    match /newsletters/{newsletterId} {
      allow read: if true; // Anyone can read

      // Only admin users can write
      allow create, update, delete: if
        request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.is_active == true;
    }
    
    // â”€â”€ Participants collection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /participants/{userId} {
      allow read: if true;
      allow create: if isAuthenticated() &&
        get(/databases/$(database)/documents/users/$(userId)).data.role == 'participant';
      allow update: if isAdmin() || request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    // â”€â”€ Family collection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /family/{userId} {
      allow read: if true;
      allow create: if isAuthenticated() &&
        get(/databases/$(database)/documents/users/$(userId)).data.role == 'family';
      allow update: if isAdmin() || request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    // â”€â”€ Staff collection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /staff/{userId} {
      allow read: if true;
      allow create: if isAuthenticated() &&
        get(/databases/$(database)/documents/users/$(userId)).data.role == 'staff';
      allow update: if isAdmin() || request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    // â”€â”€ Mentors collection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /mentors/{userId} {
      allow read: if true;
      allow create: if isAuthenticated() &&
        get(/databases/$(database)/documents/users/$(userId)).data.role == 'mentor';
      allow update: if isAdmin() || request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    // â”€â”€ Profiles collection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /profiles/{userId} {
      allow read: if true; // Public read for display names, etc.
      allow create: if isAuthenticated();
      allow update: if isAdmin() || request.auth.uid == userId;
      allow delete: if isAdmin();
      allow write: if isAdmin();
    }

    // â”€â”€ Posts collection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /posts/{postId} {
      allow read: if true; // Public read for posts
      allow create: if isAuthenticated();
      allow update, delete: if request.auth.uid == resource.data.authorId || isAdmin();
      allow update: if isAuthenticated() &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likesCount', 'likedBy', 'commentsCount']);
      
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isAuthenticated() &&
          request.resource.data.authorId == request.auth.uid;
        allow update, delete: if isAuthenticated() && 
          (request.auth.uid == resource.data.authorId || isAdmin());
      }
    }

    // â”€â”€ Personal Projects collection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /personal_projects/{projectId} {
      allow read: if true; // Public read for projects
      allow create: if isAuthenticated();
      allow update, delete: if request.auth.uid == resource.data.authorId || isAdmin();
      allow update: if isAuthenticated() &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likesCount', 'likedBy', 'commentsCount']);
      
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isAuthenticated() &&
          request.resource.data.authorId == request.auth.uid;
        allow update, delete: if isAuthenticated() && 
          (request.auth.uid == resource.data.authorId || isAdmin());
      }
    }

    // â”€â”€ Collection Group Rules for Comments â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /{path=**}/comments/{commentId} {
      allow read: if true;
      allow create: if isAuthenticated() &&
        request.resource.data.authorId == request.auth.uid;
      allow update, delete: if isAuthenticated() && 
        (request.auth.uid == resource.data.authorId || isAdmin());
    }

    // â”€â”€ Mentorship collection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /mentorship/{mentorshipId} {
      allow read, write: if isAdmin();
    }

    // â”€â”€ Conversations & messages â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /conversations/{convoId} {
      allow read, write: if true;
      match /messages/{msgId} {
        allow read, write: if true;
      }
    }

    // â”€â”€ Other public collections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /elemental_projects/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /events/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /team/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // â”€â”€ Progress Reports collection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /progress_reports/{reportId} {
      allow create: if isMentor() || isAdmin();
      allow read, update, delete: if isAdmin();
    }
    
    // â”€â”€ Page Analytics collection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /page_analytics/{pageId} {
      allow read, update: if isAuthenticated();
      allow create: if isAuthenticated();
    }

    // â”€â”€ Partners collection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /partners/{partnerId} {
      allow create, read, update, delete: if isAdmin();
    }

    // â”€â”€ Donations collection â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    match /donations/{donationId} {
      // Allow any user (authenticated or not) to create a donation
      allow create: if true; 
      // Only allow admins to read, update, and delete donations
      allow read, update, delete: if isAdmin();
    }

    // ðŸš« Admin override for everything
    match /{document=**} {
      allow read, write: if isAdmin();
    }
  }
}
